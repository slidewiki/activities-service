language: node_js
node_js: 8
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm update --dev
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_1f396baa03b9_key -iv $encrypted_1f396baa03b9_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: BbtMtAsaNI6zzGEITCRVg/J3iJpkOfDnqufr4ylt8fg/9u0brDKqFYQvjTl0s4qjQTWPbxJiBm+tcCZquHUuLH1Mdx0V7Lg3mFEK//XT2jb2V9Ya8ci1+rpqTbBHUIpVP7tUo4NS7mVFH/MTTRbERG9uxUIz8Q9J3mr+lZJZWSbCMi3SRyubuvRr8dbzfXqJrym9+u7W6Ui+Ui/jki/Xvj0kpwIznqpoIviNwFGRuMpDaCCkGQssUhN2OPYQ7T9/foBdhGPdJdDZ367e2JzdNsTm99ykeql8xVQ3KCqHAqpGErUmTZ1MPyq32qEtZX0NoKeKR4hdiMJjH5xzWwptGguyc/ippXc9KUfgxTddoE6X66F3BH1jzYDp5rQmxAAxAPM/hxz4F7n+UIY0EVGMzqJpywQeiq0ZyImSnkE6BhBNpv8sn2+e/58YPDWUuXHPrGbn8ZdlLDAvwgIxY9L91bmGk35HmimcY5XT6fBRLy9nUAiJ8xH5uX2ay1qjeAJ8iPXjTUIrKkOgtm1vlgocH+ozmB16GPVmbVH2O2dcfrktM1aeizzhD9spNgjHQdb71O1pc0sD+p0SAhVsEa7MOcnDS1f343nlnfC4mGlhPixFErM+9iVtLQKZ/2iSX59yThFrjs0n5SfAKRxcnMi71/I9SfuzQW/sTFohTEaAGJI=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: kKM0c8kGr2NI+SVmCgfyPCeYWTYe7S8qtH861TlDmD/svRJF3Pz9222uoekY7SUpNkUfNsby2e83FcEcUrYxXTCM2wRY8DLV0vdYI82wO2XKDKdJMNsfp21KspCXex/t44lndtmtzs4Y1D3ondxXyAAOsYhtZoK5lzBs3/fwgZlT1VYg95ChLEm7ecGoiJf5fuvYspybZ+IOmB9gcVloEzQpW7Rt9c0ku27JT/pOErhV2e3M5QLHsa9dZ0TkLm8mucBTweKuD36KlSRInEN6OA65lCtJxOoRkRbIihxqoc68UnZh0eqndpwcFQs5MrocbR/VfYibhBRkAZIhB8EaWphdFvdTy8n7Gswb6ioYoWgL6gc8F/+K4dCYyraKtW+aFnbJfIbvAQKMrB8zgq3olbqu8J0EIFI1VXkkLk/AMzSUruGuplY98TRXO5o30sZ/u0XvES7a19JCT0M8Zbg1Us4EfX0xt+016vvyfzukc9teQ2gWx4ND9DGzUZ5dztG2klcF9V1YLZy9d956Rel/L3M0CfdZXTq0fvqzVaPRkVxo7f+bp2+4Zm7DfbG4bk2WKxuEC0pNLEf7/RNrYJVMV8Bpeojrq7/vBx5On71dDjIkVDpID2FMXwWAEGvDtU8qYrtGqCvwGC7va6dc7VpETT6yUmMFn9DBDkijbb5TzBg=
