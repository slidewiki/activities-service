language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
before_script:
- npm run start:mongodb
script:
- sleep 15
- npm run lint
- npm run test:unit
- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_d544f37e9fbf_key -iv $encrypted_d544f37e9fbf_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- npm run stop:mongodb
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: BbtMtAsaNI6zzGEITCRVg/J3iJpkOfDnqufr4ylt8fg/9u0brDKqFYQvjTl0s4qjQTWPbxJiBm+tcCZquHUuLH1Mdx0V7Lg3mFEK//XT2jb2V9Ya8ci1+rpqTbBHUIpVP7tUo4NS7mVFH/MTTRbERG9uxUIz8Q9J3mr+lZJZWSbCMi3SRyubuvRr8dbzfXqJrym9+u7W6Ui+Ui/jki/Xvj0kpwIznqpoIviNwFGRuMpDaCCkGQssUhN2OPYQ7T9/foBdhGPdJdDZ367e2JzdNsTm99ykeql8xVQ3KCqHAqpGErUmTZ1MPyq32qEtZX0NoKeKR4hdiMJjH5xzWwptGguyc/ippXc9KUfgxTddoE6X66F3BH1jzYDp5rQmxAAxAPM/hxz4F7n+UIY0EVGMzqJpywQeiq0ZyImSnkE6BhBNpv8sn2+e/58YPDWUuXHPrGbn8ZdlLDAvwgIxY9L91bmGk35HmimcY5XT6fBRLy9nUAiJ8xH5uX2ay1qjeAJ8iPXjTUIrKkOgtm1vlgocH+ozmB16GPVmbVH2O2dcfrktM1aeizzhD9spNgjHQdb71O1pc0sD+p0SAhVsEa7MOcnDS1f343nlnfC4mGlhPixFErM+9iVtLQKZ/2iSX59yThFrjs0n5SfAKRxcnMi71/I9SfuzQW/sTFohTEaAGJI=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: ZBcuyUoKGdCXO8bEmNeEaxFmSzVZ108n6zTJePkhW6WjFkx3Y9V9Chqn5gyUVIW2VQhgwPr8OT1dHivlUhdpIl3YS6a2fM93hz4eXSX9iJTioURDszH14SFKapCWI+XBtDFUeQ2N8OL4O6nSIIThA+cGKoz0KVWQ59FpELyHTLtuwrQmbn/oO4jDXBHAIUSqd8ynJFNaK35t8a0tqTTYfTnxVB7Ybp8vODQTqrafpTXMeIL/sZ+sXeuEy9lFTbRlADHfq+Sm8C5XgEnHpD4KbS1RCwqwteR+MvFiUHVvxYoXjprCREl+xbJfmlcskA8Ka8Kur9MlvyWt3v0dFQbqS4IY6DEYoU5ST7EcP8oQOEcQw571dhMuVfqfwCUyle0YCna+zLRotR7hTS1MamwDwVoNkpB4irucAxLa+BipIeLALiESMx1yzx93icXxJM9bD3aVdNYbuVdW1i8S77Ab2zsk708l5Oc+KIupKwiG7IjViZd/2RY0xgzD+mtAS9SJ1GqssReEya9yOyX4fdtHwY6g0sSeefse5uBGoxf9TKIGKoO96vzpQJHyUijfVRNXpJJELyer6ZbxwAVPKNN3RrWKsJYSwuHeZO6CgrvdUnWBnEIxNEG7xDaOj69XbgN14QDCqI1ahZS0AknH0r4CSgerNyrkRzDnchobcnU5DRQ=
  - secure: gXhn8Yf3XqVF39pe2snY8T6NeqspxQYjBmupetS4x7fGvDdNJElPz6dMZSfdzpklvAbbftVrngQbGbS0p6dRC1fM17WcU4S0e5HV0XNI43S9FVXcP9TsbyDlIq85Iwtez1Px3Zbu5jutEfdoeyZezY1tfi3AVaTCZ3vY0t3mf9Z+BrJ5ABpAWErdSwYQ2JuT8doIpK0ydZQygiILzPviGglQw2eELqnfD51eNOk/o4SMJW3xU7Mmu9N0dK4dhQ8DWYO0j0WMSp0YlRAvmrIN/KoOtR28gXdAeks33QzVwwU/1M3NhE0Q4OBmDhdBiPE/JMww61dpK2mVkpVaRwYupzdToYjEC+iaZFlOhM40UEV17el7MF5UpT+PaEyQj9UgNv/NM+i5Qlqbzwp7FWXdrcP8Xg2Ap8pdbAzGFR5N6sZYsZYl9F3OPCmsLGVmWNgPfGZ1joQ0MbjYnUM2CvCAgLt68AsJgPHZJ8VBtqiNoNxZn+Bkeb045PB8S0sMnKZpO4rVXeeSZ1eP6oDM+avkDZrCsy9T3zpbsfToI/3UUf6LkhaFwGsOOn2DAlPQlWDc/bvZ0ADs+rCt6BgM+DvZUi43Fy7Ep/z2GwpCVZg5F1LaB8/+tqg3rIlP/1MYcFeUJ2djd7PiUWy9VWGEZlpn26sOQ/rwSCj14/uxZNRiOXo=
  - secure: oDHIlnskXf3rGRl+H63AyHyWnLMTABiPOkYQu0aXVJ7SAYHIOhxDRyYYxB73GFMWLtaTo8m1l3mQ8wx2+ZLiXZIUSb2+Rqz6wRrHntZWFZi0MHeXd/Mb1w4c2kxzFw9Lut6YAyE0YWo1YxOnPy/RafnAvWwV3zjXhbXaxjEVf67ErQJoypMU5Q1lY8zUX2bet3K35BdVaN/3hpZbC7MdzTPdsM0crFelVqAwAeetS8vWX8utJJmMod5mCM4bcfGfmkJEIm37745GkFP23bEDGpquq/C5M0Civd7sEjthCpU+WzM0CveusVm687CTejpG0KPfk7NezLpG3UZj2yWzMCVsan89dzPNHQqWM1W11Qx1Ky5Tgt/dqyrSvO65qEfsMI32ZmBKjJUZSy2NpQJOFpnppd+/F7kBXGSFm+zn3dbnD1z//mmYPriR6rB84KqEYN8o0rcqGdcIbCcQkiFlxbMWf6jwe6F9K+pEL+oYdPuSdSsN+/bioi5Oq992dKlwl1OGkMjVtrWRQUbVqZDXIypA6+Rub3VD+5qcMLUsGUyXUSo4C3gy9CFgxHAOqgayar247BjY7NJZV10sMLWzblNTCdLf7iWvRkA1KgUdyIOoJj+yLWsN8wJKjxH92aX0vOY+suvZGjcGRPNO1uQ+AO4USrGFFPUbXzGzeDyzkPk=
  - secure: g6rjmW7+chpTMhILA+Wf6KSClhkPmg4kHmYruqvgC4X/yMvaHIGpFQeTDBJx1VxvATf+MmsRgyWLg8iN/Mk14KECQpHMmR2NzrepxDHs5wd21M/h8yvjSB23mVdi6UAKDmIFC/e1kGfnE2R9YQJ0+tMxBl7YhSSk1ctwhkxp84tg+sSHHZqbm8RJG1YeWtBFRgfmscqsmkRmTVgeCCzZTgJ432Kh1gauPxWdQpssMzlPf+sGQejpG4NF1ZXr8MnX58ijjFimNA2H4Uu6hQWyYfT1ZcO9o7n7GVdvc5jcTytts9TfWWnVS7Ah1WnUiic2Q31PjCBRR235zNX8f2VHSs0z5JxT1zzzyuZ9oFjheIviWkip8m4tLRYknCCpmF4PMLz5wbw/C3ikjk6GunaDtPPKilOfqw9c24E0XtsKy7RuMda/9jIVrHuhtXZBLVJbcCYUl+LsZNdLXEqphd3boe/UKkcb2Riimlz80++ift/9yiupuCmh03ztq3jiergnQAJ08yq+5fY6/I8+dvdLNGd5GUiiHBfLhv3KcG9Z+H7Xzu1DMfKoB9VFihcNt+UWwTj1v8DbaieG1+pVF2wNj/IR5MioQ14XrL8Xd+Mlx4kCshW+pKBj6UTGJguUUDjqBhWfJRQe09Dn6T6q+MYf+e99sd2qqKpRi+Hk9szHytc=
